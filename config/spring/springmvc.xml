<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context.xsd">
                 
    <!-- *******************配置spring对控制层的管理 start******************* -->
    
	
	
	
	
	
    <!-- *********配置试图解析器 start********* -->
	<!-- *视图解析器 --> 
	<!-- **解析jsp,默认使用jstl标签 -->            
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    	<property name="suffix" value=".jsp"></property>
    	<property name="prefix" value="/WEB-INF/view/"></property>
    </bean>
    <!-- *********配置试图解析器 end********* -->
    
    
    
    
     
    
    
    
    <!-- *********配置注解驱动 start********* -->
	<!-- 
		使用注解驱动可以代替注解映射器和注解适配器的配置;
		默认加载了许多参数方法,比如json转化解析器;
		实际开发用<mvc:annotation-driven></mvc:annotation-driven>
	-->
	<mvc:annotation-driven conversion-service="conversionService"></mvc:annotation-driven>
    <!-- *********配置注解驱动 end********* -->
    
    
    
    
	
	
	
	<!-- *********配置幻转换器 start********* -->
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<list>
				<bean class="com.zk.ssm.converter.IntegerConverter"></bean>
			</list>
		</property>
	
	</bean>
	<!-- *********配置幻转换器 end********* -->
	
	
	
    
    
    
    
    
    
    <!-- *********配置controller的bean end********* -->
    <!--       
    	组件扫描,即将注解类加入spring容器;
    	可以扫描controller,service..。
	-->
    <context:component-scan base-package="com.zk.ssm.controller"></context:component-scan>      
    <!-- *********配置controller的bean end********* -->
    
    
    
   
    
    
    
    
    
    
	<!-- *******************配置spring对控制层的管理 end******************* -->  
</beans>  